{"remainingRequest":"C:\\Users\\sagiv\\github clones\\react-trap\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[[\"@babel/preset-env\",{\"modules\":false}],\"@babel/preset-react\",[\"C:\\\\Users\\\\sagiv\\\\github clones\\\\react-trap\\\\node_modules\\\\babel-preset-docz\\\\dist\\\\index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",[\"C:\\\\Users\\\\sagiv\\\\github clones\\\\react-trap\\\\node_modules\\\\docz-utils\\\\lib\\\\named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"cacheDirectory\":true,\"babelrc\":false}!C:\\Users\\sagiv\\github clones\\react-trap\\src\\docs\\mdx\\multipleEvents.mdx","dependencies":[{"path":"C:\\Users\\sagiv\\github clones\\react-trap\\src\\docs\\mdx\\multipleEvents.mdx","mtime":1540029031436},{"path":"C:\\Users\\sagiv\\github clones\\react-trap\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540019648933},{"path":"C:\\Users\\sagiv\\github clones\\react-trap\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nimport { Playground } from 'docz';\nimport Trap from 'react-trap';\nimport Box from '../components/Box';\nexport default (function (_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components,\n    props: {\n      \"id\": \"multiple-events\"\n    }\n  }, \"multiple events\"), React.createElement(MDXTag, {\n    name: \"h4\",\n    components: components,\n    props: {\n      \"id\": \"you-can-pass-multiple-events-to-the-event-on-and-off-props-just-pass-a-string-with-events-seperated-by-spaces\"\n    }\n  }, \"You can pass multiple events to the \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"h4\"\n  }, \"event\"), \", \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"h4\"\n  }, \"on\"), \" and \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"h4\"\n  }, \"off\"), \" props, just pass a string with events seperated by spaces.\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"In this example we are passing both \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"dblclick\"), \" and \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"contextmenu\"), \" events to the \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"event\"), \" prop.\", React.createElement(MDXTag, {\n    name: \"br\",\n    components: components,\n    parentName: \"p\"\n  }), \"This means we will trigger the focus when either the lement gets a double click or a context menu (right click on desktop or long press on mobile).\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"em\",\n    components: components,\n    parentName: \"p\"\n  }, \"You can use it with \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"em\"\n  }, \"on\"), \" & \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"em\"\n  }, \"off\"), \" props as well.\")), React.createElement(Playground, {\n    __position: 0,\n    __codesandbox: \"undefined\",\n    __code: \"<Trap event={['dblclick', 'contextmenu']}>\\n  {(trapped, ref) => <Box innerRef={ref} isFocused={trapped} />}\\n</Trap>\",\n    __scope: {\n      props: props,\n      Trap: Trap,\n      Box: Box\n    }\n  }, React.createElement(Trap, {\n    event: [\"dblclick\", \"contextmenu\"]\n  }, function (trapped, ref) {\n    return React.createElement(Box, {\n      innerRef: ref,\n      isFocused: trapped\n    });\n  })));\n});",{"version":3,"sources":["C:\\Users\\sagiv\\github clones\\react-trap\\src\\docs\\mdx\\multipleEvents.mdx"],"names":["React","MDXTag","Playground","Trap","Box","components","props","trapped","ref"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import {Playground } from 'docz';\nimport Trap from 'react-trap';\nimport Box from '../components/Box';\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"multiple-events\"}}>{`multiple events`}</MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"you-can-pass-multiple-events-to-the-event-on-and-off-props-just-pass-a-string-with-events-seperated-by-spaces\"}}>{`You can pass multiple events to the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h4\">{`event`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h4\">{`on`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h4\">{`off`}</MDXTag>{` props, just pass a string with events seperated by spaces.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In this example we are passing both `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dblclick`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`contextmenu`}</MDXTag>{` events to the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`event`}</MDXTag>{` prop.`}<MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>\n{`This means we will trigger the focus when either the lement gets a double click or a context menu (right click on desktop or long press on mobile).`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`You can use it with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"em\">{`on`}</MDXTag>{` & `}<MDXTag name=\"inlineCode\" components={components} parentName=\"em\">{`off`}</MDXTag>{` props as well.`}</MDXTag></MDXTag>\n<Playground __position={0} __codesandbox={`undefined`} __code={`<Trap event={[\\'dblclick\\', \\'contextmenu\\']}>\n  {(trapped, ref) => <Box innerRef={ref} isFocused={trapped} />}\n</Trap>`} __scope={{props,Trap,Box}} >\n  <Trap event={[\"dblclick\", \"contextmenu\"]}>\n    {(trapped, ref) => <Box innerRef={ref} isFocused={trapped} />}\n  </Trap>\n</Playground></MDXTag>\n  "]}]}